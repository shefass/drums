{"version":3,"sources":["sounds/metalscrape.wav","sounds/pianoCsh.wav","sounds/pianoFminor.wav","sounds/pianoLid.wav","sounds/pianoNot.mp3","sounds/TeddyFrost.wav","sounds/tombola.wav","sounds/bongo.wav","sounds/blip.wav","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","time","data","id","keyCode","name","sound","metal","pianoC","pianoF","pianoL","pianoN","teddy","tombola","bongo","blip","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","click","event","setTimeout","timeOut","setState","srcElement","clearTimeout","state","handleKeyPress","bind","assertThisInitialized","_this2","document","addEventListener","map","a","getElementById","_this3","removeEventListener","idObject","filter","length","_this4","react_default","createElement","className","App_Button","letter","key","Display","PlayMusic","Component","obj","v","src","autoPlay","Button","_this5","onEnter","e","hasCapture","onLeave","styles","backgroundColor","color","height","width","style","onPointerEnter","onPointerLeave","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca8dabf4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/metalscrape.d8026bac.wav\";","module.exports = __webpack_public_path__ + \"static/media/pianoCsh.93ab2582.wav\";","module.exports = __webpack_public_path__ + \"static/media/pianoFminor.d61e54da.wav\";","module.exports = __webpack_public_path__ + \"static/media/pianoLid.97dc50c7.wav\";","module.exports = __webpack_public_path__ + \"static/media/pianoNot.dabc3535.mp3\";","module.exports = __webpack_public_path__ + \"static/media/TeddyFrost.6b79a5b9.wav\";","module.exports = __webpack_public_path__ + \"static/media/tombola.e32b8520.wav\";","module.exports = __webpack_public_path__ + \"static/media/bongo.36bb8e3a.wav\";","module.exports = __webpack_public_path__ + \"static/media/blip.beb4ba7a.wav\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport metal from \"./sounds/metalscrape.wav\";\nimport pianoC from \"./sounds/pianoCsh.wav\";\nimport pianoF from \"./sounds/pianoFminor.wav\";\nimport pianoL from \"./sounds/pianoLid.wav\";\nimport pianoN from \"./sounds/pianoNot.mp3\";\nimport teddy from \"./sounds/TeddyFrost.wav\";\nimport tombola from \"./sounds/tombola.wav\";\nimport bongo from \"./sounds/bongo.wav\";\nimport blip from \"./sounds/blip.wav\";\n\nconst data = [\n  { id: \"q\", keyCode: 81, name: \"Metal\", sound: metal },\n  { id: \"w\", keyCode: 87, name: \"Piano C\", sound: pianoC },\n  { id: \"e\", keyCode: 69, name: \"Piano F Minor\", sound: pianoF },\n  { id: \"a\", keyCode: 65, name: \"Piano Lid Closing\", sound: pianoL },\n  { id: \"s\", keyCode: 83, name: \"Piano N\", sound: pianoN },\n  { id: \"d\", keyCode: 68, name: \"Teddy Frost\", sound: teddy },\n  { id: \"z\", keyCode: 90, name: \"Tombola\", sound: tombola },\n  { id: \"x\", keyCode: 88, name: \"Bongo\", sound: bongo },\n  { id: \"c\", keyCode: 67, name: \"Blip\", sound: blip }\n];\n\nvar time;\nclass App extends Component {\n    constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\"\n    };\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n    data.map(a =>\n      document.getElementById(a.id).addEventListener(\"click\", this.click)\n    );\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress); // remove this same event\n    //listener.It's good practice to use this lifecycle method to do any clean up on\n    //React components before they are unmounted and destroyed. Removing event listeners is\n    //an example of one such clean up action.\n    data.map(a =>\n      document.getElementById(a.id).removeEventListener(\"click\", this.click)\n    );\n  }\n  componentDidUpdate(){\n       \n  }\n  \n  click = event => {\n   time = setTimeout(this.timeOut, 1000); \n    \n    this.setState({\n      id: event.srcElement.id\n    });\n    \n  };\n\n  //setTimeout(this.timeOut, 1000); we need to reset state\n  timeOut = () => {\n      this.setState({\n      id: \"\"\n    });\n    clearTimeout(time);\n  };\n  \n  handleKeyPress(event) {\n    \n    let idObject = data.filter(a => event.keyCode === a.keyCode);\n    time = setTimeout(this.timeOut, 1000);\n    \n      if (idObject.length > 0) {\n      this.setState({\n        id: idObject[0].id\n      });\n    }\n    \n  }\n  \n  render() {\n    \n    return (\n      <div className=\"Wrapper\">\n        <div id=\"drum-machine\">\n          <div id=\"keyboard\">\n            {data.map(a => (\n              <Button\n                letter={a.id}\n                key={a.id}\n                id={this.state.id}\n                name={a.name}\n                sound={a.sound}\n              />\n            ))}\n          </div>\n          <div id=\"control\">\n            <div id=\"display\">\n              <Display id={this.state.id} />\n            </div>\n            <div id=\"text\">\n              <p>Push keyboard!!</p>\n              <p>Or use your mouse.</p>\n              <p>Here goes switches for control.</p>\n              <PlayMusic id={this.state.id} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Display(props) {\n  if (props.id === \"\") {\n    return \"Saund name\";\n  }\n  const obj = data.filter(v => v.id === props.id);\n  return <p>{obj[0].name}</p>;\n}\nfunction PlayMusic(props) {\n  if (props.id === \"\") {\n    return false;\n  }\n  const obj = data.filter(v => v.id === props.id);\n  return <audio src={obj[0].sound} autoPlay />;\n}\n\nclass Button extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasCapture: false\n    };\n  }\n  onEnter = e => {\n    this.setState({ hasCapture: true });\n  };\n  onLeave = e => {\n    this.setState({ hasCapture: false });\n  };\n\n  render() {\n    const styles = {\n      backgroundColor: this.state.hasCapture ? \"pink\" : \"yellow\",\n      color: this.props.letter === this.props.id && \"blueviolet\",\n      height: this.props.letter === this.props.id && \"70%\",\n      width: this.props.letter === this.props.id && \"70%\"\n    };\n    const padStyle = {};\n    return (\n      <div className=\"drum-pad\" style={padStyle}>\n        <div\n          className=\"drum-item\"\n          id={this.props.letter}\n          onPointerEnter={this.onEnter}\n          onPointerLeave={this.onLeave}\n          \n          style={styles}\n        >\n          {this.props.letter}\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}